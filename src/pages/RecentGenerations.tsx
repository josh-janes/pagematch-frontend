// src/pages/RecentGenerations.tsx
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { Recommendation, getRecentRecommendations } from '../api/mockService';
import BookCard from '../components/BookCard';
import ExpandedBookView from '../components/ExpandedBookView';
import { ArrowLeftIcon } from '@heroicons/react/24/solid';
import { motion, AnimatePresence } from 'framer-motion';

// Animation variants for the book grid
const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
        opacity: 1,
        transition: {
            staggerChildren: 0.07,
        },
    },
};

const cardVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
        y: 0,
        opacity: 1,
        transition: { type: 'spring', stiffness: 120 },
    },
};

const RecentGenerations: React.FC = () => {
    const [recommendations, setRecommendations] = useState<Recommendation[]>([]);
    const [isLoading, setIsLoading] = useState(true);
    const [selectedBookId, setSelectedBookId] = useState<number | null>(null);

    useEffect(() => {
        const fetchRecent = async () => {
            setIsLoading(true);
            try {
                const fetchedRecs = await getRecentRecommendations();
                setRecommendations(fetchedRecs);
            } catch (error) {
                console.error("Failed to fetch recent recommendations:", error);
            } finally {
                setIsLoading(false);
            }
        };

        fetchRecent();
    }, []); // The empty dependency array ensures this effect runs only once on component mount

    return (
        <div>
            <Link to="/" className="inline-flex items-center gap-2 text-indigo-600 hover:text-indigo-800 mb-6 transition-colors">
                <ArrowLeftIcon className="h-5 w-5" />
                Back to Home
            </Link>
            <h1 className="text-3xl font-bold text-gray-800 mb-2">Recent AI Generations</h1>
            <p className="text-gray-600 mb-8">
                Here are the latest book recommendations generated by our AI for all users.
            </p>

            {isLoading ? (
                <div className="text-center p-10">
                    <p className="text-gray-600">Loading recent recommendations...</p>
                </div>
            ) : recommendations.length > 0 ? (
                <motion.div
                    variants={containerVariants}
                    initial="hidden"
                    animate="visible"
                    className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8"
                >
                    {recommendations.map((rec) => (
                        <motion.div key={rec.bookId} variants={cardVariants}>
                            <BookCard
                                book={rec}
                                layoutId={`recent-card-${rec.bookId}`}
                                onClick={() => setSelectedBookId(rec.bookId)}
                                // No onDelete prop is passed, so the button won't render
                            />
                        </motion.div>
                    ))}
                </motion.div>
            ) : (
                <div className="text-center bg-white p-12 rounded-lg shadow-md">
                    <h3 className="text-xl font-semibold text-gray-700">No Recent Recommendations</h3>
                    <p className="text-gray-500 mt-2">
                        There have been no recent recommendations generated. Please check back later.
                    </p>
                </div>
            )}

            <AnimatePresence>
                {selectedBookId && (
                    <ExpandedBookView
                        bookId={selectedBookId}
                        layoutId={`recent-card-${selectedBookId}`}
                        onClose={() => setSelectedBookId(null)}
                    />
                )}
            </AnimatePresence>
        </div>
    );
};

export default RecentGenerations;